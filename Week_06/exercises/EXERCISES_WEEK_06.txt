 _______   _______  ___________  _____ _____ _____ _____ _____ 
|  ___\ \ / /  __ \|  ___| ___ \/  __ \_   _/  ___|  ___/  ___|
| |__  \ V /| /  \/| |__ | |_/ /| /  \/ | | \ `--.| |__ \ `--. 
|  __| /   \| |    |  __||    / | |     | |  `--. \  __| `--. \
| |___/ /^\ \ \__/\| |___| |\ \ | \__/\_| |_/\__/ / |___/\__/ /
\____/\/   \/\____/\____/\_| \_| \____/\___/\____/\____/\____/ 

#----------------------------------------------------------------------
# Ollama and LLMs
#----------------------------------------------------------------------

1.) Make sure the machine type of your GitHub Codespaces environment is >= 16GB.

2.) Open a new Terminal, start Ollama and list all available LLMs.

    ollama serve
    ollama list

3.) Import Llama3.2:latest (3B, 2GB).
    
    ollama run llama3.2:latest

4.) Test the model in the VS Code Terminal.

5.) Quit the model:

    /bye

#----------------------------------------------------------------------
# Ollama, LLMs & Python
#----------------------------------------------------------------------

1.) Run the Jupyter notebook 'ollama_llms.ipynb' step by step.

2.) Modify the example request.

3.) Change the LLM and check the performance and quality of the response.

4.) Does it work well? Any issues?

#----------------------------------------------------------------------
# Text-to-SQL with LangChain
#----------------------------------------------------------------------

1.) Make sure that the file ./data/credentials.json contains a valid API-key.
    Use your own or the one provided on the course day on Moodle (week 06).
    Replace the sk--XXXX ... string in the file with the API-key.

    {
      "openai": {
        "api_key": "sk--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
        }
    }

2.) Run the Jupyter notebook 'text_to_sql.ipynb' step by step.

3.) Use the SQL-agent to generate SQL-queries based on the following three questions:

    - Which is the avarage apartment price by rooms?
    - Which are the 5 cheapest apartments?
    - Which are the 5 apartments with the largest area? Show
      only the address, rooms, area and price of these apartments!

#----------------------------------------------------------------------
# Augmented analytics with GPT-3.5 and Python
#----------------------------------------------------------------------

1.) Make sure that the file ./data/credentials.json contains a valid API-key.
    Use your own or the one provided on the course day on Moodle (week 06).
    Replace the sk--XXXX ... string in the file with the API-key.

    {
      "openai": {
        "api_key": "sk--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
        }
    }

2.) Run the Jupyter notebook 'augmented_analytics.ipynb' step by step.

3.) Define own questions to generate Python code and data insights.

4.) Which parts work well and which not? 